#!/bin/bash

# check the number of arguments
if [ "$#" -eq 0 ] || [ "$#" -gt 1 ]; then
    echo "Error: The number of arguments is not appropriate. You should use one argument for this command."
    echo "Example: bearcard \"Make a new directory for the new project\""
    exit 1
fi

# check if jq is installed
if ! command -v jq &> /dev/null; then
    echo "Error: jq is not installed."
    echo "Please install jq using 'brew install jq' and try again."
    exit 1
fi

# set API 
APIKey=""
APIToken=""
BoardID=""

function urlencode() {
  # a URL encoding function
  local data
  data="$(curl -s -o /dev/null -w %{url_effective} --get --data-urlencode "data=$1" "")"
  echo "${data##*data=}"
}

function num_of_cards() {
  local ListID=$1

  # fetch all the cards in a given list
  all_cards=$(curl --silent --request GET \
  --url "https://api.trello.com/1/lists/${ListID}/cards?key=${APIKey}&token=${APIToken}" \
  --header 'Accept: application/json')

  # check if response is an appropriate JSON
  echo "$response" | jq empty &>/dev/null
  if [ $? -ne 0 ]; then
    echo "Error: Invalid JSON response for ${ListID}"
    return 1
  fi

  echo $all_cards | jq '. | length'
}

function fetch_list_ids() {
    # fetch all the lists
    response=$(curl --silent --request GET \
      --url "https://api.trello.com/1/boards/${BoardID}/lists?key=${APIKey}&token=${APIToken}" \
      --header 'Accept: application/json')

    # fetch the ID of the To Do list
    echo "$response" | jq -r '.[] | select(.name == "To Do").id'

    # fetch all the list IDs
    echo "$response" | jq -r '.[].id'
}

# Call function and capture output in an array
IFS=$'\n' read -d '' -r -a output_array < <(fetch_list_ids && printf '\0')
TodoListID="${output_array[0]}"
list_ids=("${output_array[@]:1}")

# calculate the total number of the cards in the board
total_number=1
for id in "${list_ids[@]}"; do
  total_number=$((total_number + $(num_of_cards $id)))
done

# encode URL
message="[PS-$total_number] ${1}"
encoded_url=$(urlencode "$message")

# create a new card with a new ticket number
create_card=$(curl --silent --request POST \
  --url "https://api.trello.com/1/cards?idList=${TodoListID}&key=${APIKey}&token=${APIToken}" \
  --header 'Accept: application/json' \
  --data "name=$encoded_url" \
  -o /dev/null \
  -w "%{http_code}")

if [[ $create_card == 2* ]]; then
  echo "Successfully created a new card in Trello: ${message}"
else
  echo "Failed to create a new card. Please contact the administrator."
fi
